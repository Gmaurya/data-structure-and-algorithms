ll	N-queen.cpp	/^typedef long long ll;$/;"	t	file:
m	N-queen.cpp	/^const int m = 1e3;$/;"	v
n	N-queen.cpp	/^int n;$/;"	v
p	N-queen.cpp	/^bool p[m+1][m+1];$/;"	v
_isPlace	N-queen.cpp	/^bool _isPlace(int r,int c){$/;"	f
_N_Queens	N-queen.cpp	/^bool _N_Queens(int c){$/;"	f
main	N-queen.cpp	/^int main(){$/;"	f
ll	N-queens-all-combination.cpp	/^typedef long long ll;$/;"	t	file:
m	N-queens-all-combination.cpp	/^const int m = 1e3;$/;"	v
n	N-queens-all-combination.cpp	/^int n;$/;"	v
p	N-queens-all-combination.cpp	/^bool p[m+1][m+1];$/;"	v
_isPlace	N-queens-all-combination.cpp	/^bool _isPlace(int r,int c){$/;"	f
_print_sol	N-queens-all-combination.cpp	/^void _print_sol(int n){$/;"	f
_N_Queens	N-queens-all-combination.cpp	/^bool _N_Queens(int c){$/;"	f
main	N-queens-all-combination.cpp	/^int main(){$/;"	f
n	subset-sum-problem.cpp	/^int n, a[107];$/;"	v
a	subset-sum-problem.cpp	/^int n, a[107];$/;"	v
s	subset-sum-problem.cpp	/^bool s[107] = {false};$/;"	v
check	subset-sum-problem.cpp	/^bool check(int k, int tar, int sum){$/;"	f
gens	subset-sum-problem.cpp	/^bool gens(int tar,int sum,int k){$/;"	f
main	subset-sum-problem.cpp	/^int main(){$/;"	f
